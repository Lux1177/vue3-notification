import{_ as l,r as s,o,c as i,b as t,d as n,a as d,e}from"./app-f6a72ae9.js";const c={},u=e(`<h2> API Reference </h2><p>The majority of settings for the Notifications component are configured using props:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>notifications</span>
  <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom right<span class="token punctuation">&quot;</span></span> 
  <span class="token attr-name">classes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-custom-class<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Note that all props are optional.</p></div>`,5),r=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Type"),t("th",null,"Default"),t("th",null,"Description")])],-1),p=t("tr",null,[t("td",null,"position"),t("td",null,"String/Array"),t("td",null,"'top right'"),t("td",null,"Part of the screen where notifications will pop out")],-1),h=t("tr",null,[t("td",null,"width"),t("td",null,"Number/String"),t("td",null,"300"),t("td",null,[n("Width of notification holder, can be "),t("code",null,"%"),n(", "),t("code",null,"px"),n(" string or number."),t("br"),n("Valid values: '100%', '200px', 200")])],-1),m=t("tr",null,[t("td",null,"classes"),t("td",null,"String/Array"),t("td",null,"'vue-notification'"),t("td",null,"List of classes that will be applied to notification element")],-1),f=t("tr",null,[t("td",null,"group"),t("td",null,"String"),t("td",null,"null"),t("td",null,"Name of the notification holder, if specified")],-1),_=t("tr",null,[t("td",null,"duration"),t("td",null,"Number"),t("td",null,"3000"),t("td",null,[n("Time (in ms) to keep the notification on screen (if "),t("strong",null,"negative"),n(" - notification will stay "),t("strong",null,"forever"),n(" or until clicked)")])],-1),g=t("tr",null,[t("td",null,"speed"),t("td",null,"Number"),t("td",null,"300"),t("td",null,"Time (in ms) to show / hide notifications")],-1),v=t("tr",null,[t("td",null,"animation-type"),t("td",null,"String"),t("td",null,"'css'"),t("td",null,[n("Type of animation, currently supported types are "),t("code",null,"css"),n(" and "),t("code",null,"velocity")])],-1),k=t("tr",null,[t("td",null,"animation-name"),t("td",null,"String"),t("td",null,"null"),t("td",null,[n("Animation name required for "),t("code",null,"css"),n(" animation")])],-1),b=t("tr",null,[t("td",null,"animation"),t("td",null,"Object"),t("td",null,"Custom"),t("td",null,"Animation configuration for Velocity animation")],-1),y=t("tr",null,[t("td",null,"max"),t("td",null,"Number"),t("td",null,"Infinity"),t("td",null,"Maximum number of notifications that can be shown in notification holder")],-1),N=t("tr",null,[t("td",null,"reverse"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Show notifications in reverse order")],-1),w=t("tr",null,[t("td",null,"ignoreDuplicates"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Ignore repeated instances of the same notification")],-1),x=t("tr",null,[t("td",null,"closeOnClick"),t("td",null,"Boolean"),t("td",null,"true"),t("td",null,"Close notification when clicked")],-1),S=t("tr",null,[t("td",null,"pauseOnHover"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Keep the notification open while mouse hovers on notification")],-1),T=t("td",null,"dangerouslySetInnerHtml",-1),q=t("td",null,"Boolean",-1),I=t("td",null,"false",-1),B={href:"https://vuejs.org/api/built-in-directives.html#v-html",target:"_blank",rel:"noopener noreferrer"},j=t("code",null,"title",-1),A=t("code",null,"text",-1),D=e(`<h3 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>click</td><td>(item: NotificationItem) =&gt; void</td><td>The callback function that is triggered when notification was clicked</td></tr><tr><td>destroy</td><td>(item: NotificationItem) =&gt; void</td><td>The callback function that is triggered when notification was destroyes</td></tr><tr><td>start</td><td>(item: NotificationItem) =&gt; void</td><td>The callback function that is triggered when notification was appeared</td></tr></tbody></table><h3 id="plugin-options" tabindex="-1"><a class="header-anchor" href="#plugin-options" aria-hidden="true">#</a> Plugin options</h3><p>Configure the plugin itself using an additional options object:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Notifications<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;alert&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Setting <code>componentName</code> can cause issues when using SSR.</p></div><p>All options are optional:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>notify</td><td>Defines the instance name. It&#39;s prefixed with the dollar sign. E.g. <code>this.$notify</code></td></tr><tr><td>componentName</td><td>String</td><td>Notifications</td><td>The component&#39;s name</td></tr></tbody></table>`,8);function V(C,E){const a=s("ExternalLinkIcon");return o(),i("div",null,[u,t("table",null,[r,t("tbody",null,[p,h,m,f,_,g,v,k,b,y,N,w,x,S,t("tr",null,[T,q,I,t("td",null,[n("Use "),t("a",B,[n("v-html"),d(a)]),n(" to set "),j,n(" and "),A])])])]),D])}const L=l(c,[["render",V],["__file","index.html.vue"]]);export{L as default};
